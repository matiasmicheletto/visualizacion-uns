{"version":3,"sources":["img/logo_uns.png","components/Menu.js","img/card_db.png","img/card_dashboard.png","img/card_repo.png","img/card_kaggle.png","components/Home.js","components/DataTable.js","charts/ScatterPlot.js","utils/LovibondScale.js","components/DataSection.js","img/slider_knob.png","components/Slider2D.js","charts/BarPlot.js","utils/Colors.js","utils/Classifier.js","components/Dashboard.js","components/About.js","App.js","index.js"],"names":["Menu","Navbar","bg","variant","fixed","to","component","Brand","src","logo","width","height","className","alt","Nav","Link","activeClassName","Component","Home","Container","style","maxWidth","Row","Col","sm","md","lg","xl","href","target","rel","color","Card","Img","card_img_eda","Body","Title","Text","card_img_db","card_img_dashboard","card_img_repo","DataTable","itemsPerPage","selectorCount","maxPages","state","header","data","attrs","suffix","cellStyler","method","v","col","currentPage","selectorStart","setPage","pos","newPos","start","Math","floor","incrementPage","setState","prevState","prevProps","decrementPage","gotoFirst","gotoLast","Pagination","Item","this","onClick","map","item","end","slice","enumRows","i","p","Number","isInteger","toFixed","Table","striped","bordered","hover","margin","getHeader","getTableRows","First","Prev","Ellipsis","Array","value","index","pageSelector","Next","Last","props","concat","ceil","length","ScatterPlot","config","chart","type","zoomType","credits","enabled","title","text","dataX","dataY","subtitle","xAxis","startOnTick","endOnTick","showLastLabel","yAxis","legend","layout","align","verticalAlign","floating","backgroundColor","borderWidth","plotOptions","scatter","marker","radius","states","lineColor","tooltip","headerFormat","pointFormat","id","styles","_","groupBy","series","s","serie","name","d","push","Highcharts","colorMap","LtoTextColor","L","rgb","EBC","round","parseFloat","LtoRGB","DataSection","ABV","Color","rawData","u_ABV","u_Color","cleanData","knobImg","Image","knob","Slider2D","padding","updateFreq","ctx","lastUpdate","dragging","xLabel","yLabel","xPrefix","yPrefix","xMin","yMin","xMax","yMax","xValue","yValue","containerRef","React","createRef","canvasRef","window","addEventListener","canvas","current","clientWidth","clientHeight","componentDidUpdate","e","x","y","w","r","getBoundingClientRect","left","right","top","bottom","ref","onMouseDown","mouseDown","onMouseMove","mouseMove","onMouseUp","mouseUp","onWheel","mouseWheel","clearRect","strokeStyle","fillStyle","font","lineWidth","moveTo","lineTo","save","rotate","fillText","restore","stroke","xy","xyToCanvas","dataBackground","k","color_t","names","selected","u","beginPath","arc","closePath","fill","showLabels","drawImage","getContext","textAlign","Object","assign","Date","now","canvasToXY","clientX","clientY","onChange","h","deltaY","onload","BarPlot","fontSize","fontWeight","categories","labels","overflow","valueSuffix","bar","dataLabels","events","click","onClassSelected","point","category","showInLegend","pointWidth","update","hue2rgb","q","t","hsl2rgb","l","g","b","mahalanobis","ci","x_mu","multiply","transpose","colors","N","random","Style","classify","n","uf","ibu","abv","fSum","reduce","a","Freq","u_IBU","s11","s12","s13","s21","s22","s23","s31","s32","s33","m","dist","sort","subStyles","maxDist","max","apply","cSum","result","defaultTarget","useFreq","Dashboard","numStyles","selectedStyle","sliderConfig","newTarget","newState","newValue","c","marginLeft","Form","Control","targetChange","min","step","marginTop","Group","Label","numStylesChange","parseInt","Check","label","checked","About","lineHeight","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbddad2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_uns.8665dc3c.png\";","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../img/logo_uns.png';\n\nclass Menu extends Component {\n\n  render() {        \n\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <NavLink to=\"/\" component={Navbar.Brand}>\n          <img src={logo} width=\"40\" height=\"40\" className=\"d-inline-block align-top\" alt=\"Logo\"/>\n        </NavLink>\n        <Nav className=\"mr-auto\">          \n          <NavLink to=\"/home\" component={Nav.Link} activeClassName='active'>Inicio</NavLink>\n          <NavLink to=\"/data\" component={Nav.Link} activeClassName='active'>Datos</NavLink>\n          <NavLink to=\"/dashboard\" component={Nav.Link} activeClassName='active'>Tablero</NavLink>                    \n        </Nav>          \n        <Nav>\n          <NavLink to=\"/about\" component={Nav.Link} className=\"right\">Acerca de</NavLink>\n        </Nav>\n      </Navbar>  \n    );\n  }\n}\n\nexport default Menu","export default __webpack_public_path__ + \"static/media/card_db.b4dd01c9.png\";","export default __webpack_public_path__ + \"static/media/card_dashboard.d9220e42.png\";","export default __webpack_public_path__ + \"static/media/card_repo.2be8a1e1.png\";","export default __webpack_public_path__ + \"static/media/card_kaggle.3cf955e6.png\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n  Container, \n  Row,\n  Col,  \n  Card  \n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport card_img_db from '../img/card_db.png';\nimport card_img_dashboard from '../img/card_dashboard.png';\nimport card_img_repo from '../img/card_repo.png';\nimport card_img_eda from '../img/card_kaggle.png';\nimport {FaExternalLinkAlt} from 'react-icons/fa';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n        <Container style={{maxWidth: \"85%\"}}>\n          <Row>\n            <h3>Menú</h3>\n          </Row>\n          \n          <Row>            \n            <Col sm={12} md={6} lg={4} xl={3}>\n              <a href=\"https://www.kaggle.com/matiasmiche/brewers-friend-recipes-analysis/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"black\"}}>\n                <Card className=\"shadow rounded\">\n                  <Card.Img variant=\"top\" src={card_img_eda} />\n                  <Card.Body>\n                    <Card.Title>Análisis exploratorio <FaExternalLinkAlt/></Card.Title>\n                    <Card.Text>\n                      Preprocesamiento y limpieza de los datos del conjunto original con Python (Kaggle Notebooks).\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </a>\n            </Col>  \n            <Col sm={12} md={6} lg={4} xl={3}>\n              <Link to=\"/data\" style={{color: \"black\"}}>\n                <Card className=\"shadow rounded\">\n                  <Card.Img variant=\"top\" src={card_img_db} />\n                  <Card.Body>\n                    <Card.Title>Conjunto de datos</Card.Title>\n                    <Card.Text>\n                      Previsualización de los datos crudos y procesados.\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Link>\n            </Col>  \n            <Col sm={12} md={6} lg={4} xl={3}>\n              <Link to=\"/dashboard\" style={{color: \"black\"}}>\n                <Card className=\"shadow rounded\">\n                  <Card.Img variant=\"top\" src={card_img_dashboard} />\n                  <Card.Body>\n                    <Card.Title>Tablero interactivo</Card.Title>\n                    <Card.Text>\n                      Un tablero para analizar el estilo de una cerveza a partir de sus atributos cuantitativos.\n                    </Card.Text>\n                  </Card.Body>                    \n                </Card>\n              </Link>     \n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n              <a href=\"https://github.com/matiasmicheletto/visualizacion-uns\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"black\"}}>\n                <Card className=\"shadow rounded\">\n                  <Card.Img variant=\"top\" src={card_img_repo} />\n                  <Card.Body>\n                    <Card.Title>Documentación <FaExternalLinkAlt/></Card.Title>\n                    <Card.Text>\n                      Código fuente de la aplicación.\n                    </Card.Text>\n                  </Card.Body>                    \n                </Card>\n              </a>     \n            </Col>\n          </Row>\n        </Container>\n    );\n  }\n}\n\nexport default Home","import React, {Component} from 'react';\nimport {Row, Table, Pagination} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './DataTable.css';\n\n\n\n// Tabla de datos genericos con paginacion para bootstrap\nclass DataTable extends Component {\n\n  // Parametros de configuracion\n  itemsPerPage = 20 // Filas por pagina\n  selectorCount = 10 // Cantidad de selectores de pagina a mostrar\n  maxPages = 0 // Maxima cantidad de paginas (se ajusta en fc de los datos)\n\n  state = {\n    header: [], // Encabezado de cada columna\n    data: [], // Conjunto de datos (array de objetos)\n    attrs: [], // Nombre de los atributos de cada columna\n    suffix: {}, // Sufijo para agregar unidades a cada columna\n    cellStyler: { // Funcion que toma el valor de una celda y devuelve el estilo\n      method: (v)=>{return {}}, // Metodo para estilizar\n      col: \"\" // Nombre del atributo a estilizar\n    },\n    currentPage: 0, // Numero actual de pagina de la tabla\n    selectorStart: 0 // Numero del primer selector de la fila de botones del paginador\n  }\n    \n  setPage = (pos) => { // Funcion para actualizar estado actual de pagina que se muestra\n    let newPos = pos < 0 ? 0 : (pos > this.maxPages ? this.maxPages : pos);\n    let start = Math.floor(pos-this.selectorCount/2)\n    start = start < 0 ? 0 : (start > this.maxPages-this.selectorCount ? this.maxPages-this.selectorCount : start);\n    return {currentPage: newPos, selectorStart: start}\n  }\n\n  incrementPage = () => { // Siguiente pagina\n    this.setState((prevState,prevProps) => {\n      return this.setPage(prevState.currentPage + 1);\n    });\n  }\n\n  decrementPage = () => { // Pagina previa\n    this.setState((prevState,prevProps) => {\n      return this.setPage(prevState.currentPage - 1);\n    });\n  }\n\n  gotoFirst = () => { // Volver al inicio\n    this.setState(this.setPage(0));\n  }\n\n  gotoLast = () => { // Ir a la ultima pagina\n    this.setState(this.setPage(this.maxPages));\n  }\n\n  pageSelector(pos) { // Cada uno de los botones de seleccion del paginador\n    return (\n      <Pagination.Item \n        key={pos}      \n        className={this.state.currentPage === pos-1 ? \"active\": \"\"}\n        onClick={() => {this.setState((prevState,prevProps) => {return this.setPage(pos-1)});}}\n        > \n          {pos}\n      </Pagination.Item>             \n    )\n  }\n\n  getHeader() { // Genera las celdas del encabezado de la tabla\n    return (\n      this.state.header.map( (item, pos) => (\n          <th key={pos}>{item}</th>\n      ))      \n    )\n  }\n\n  getTableRows() { // Genera las filas de la tabla a partir de un rango de los datos\n    let start = this.itemsPerPage*this.state.currentPage;\n    let end = this.itemsPerPage*(this.state.currentPage + 1);\n    return (\n      this.state.data.slice(start, end).map( (item, pos)=>(\n        <tr key={pos}>\n          { // Si enumera filas, agregar columna con los indices\n            this.state.enumRows ?\n              <td>{start+pos+1}</td>\n            :\n              \"\"\n          }\n          { // Resto de los atributos\n            this.state.attrs.map( (i, p) => (\n                <td \n                  key={p} \n                  style={this.state.cellStyler.col === i ? this.state.cellStyler.method(item[i]): {}}>\n                    {\n                      typeof item[i] === \"number\" && !Number.isInteger(item[i]) ? item[i].toFixed(2) : item[i]\n                    }\n                    {this.state.suffix[i]}\n                </td> \n              )\n            )\n          }\n        </tr>\n      ))\n    )\n  }\n\n  render() {   \n    return (\n        <div style={{width:\"100%\"}}>\n          <Row>\n            <Table striped bordered hover style={{maxWidth: \"75%\", margin: \"0 auto\"}}>\n              <thead>\n                <tr>\n                  {this.getHeader()}\n                </tr>\n              </thead>\n              <tbody>\n                {this.getTableRows()}\n              </tbody>\n            </Table>\n          </Row>\n\n          <Row className=\"justify-content-md-center mt-3\">\n            <Pagination>\n              <Pagination.First  onClick={this.gotoFirst}/>\n              <Pagination.Prev onClick={this.decrementPage} />\n              {\n                this.state.selectorStart > 0  ?\n                  <Pagination.Ellipsis />\n                  :\n                  \"\"\n              }\n              {[...Array(this.selectorCount+1)].map((value, index) => (this.pageSelector(this.state.selectorStart+index+1)))}\n              {\n                this.state.selectorStart < this.maxPages - this.selectorCount  ?\n                  <Pagination.Ellipsis />\n                  :\n                  \"\"\n              }\n              <Pagination.Next onClick={this.incrementPage} />\n              <Pagination.Last onClick={this.gotoLast}/>\n            </Pagination>\n          </Row>\n\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    if(this.props.data){ // Puede que demore un poco mas en pasar este argumento?\n      // Si la enumeracion de filas esta habilitada, agregar columna\n      let header = this.props.enumRows ? [\"#\"].concat(this.props.header) : this.props.header; \n\n      // Ajustar el numero de selectores en funcion de la cantidad de datos\n      this.maxPages = Math.ceil(this.props.data.length / this.itemsPerPage)-1;\n      if(this.maxPages < this.selectorCount)\n        this.selectorCount = this.maxPages - 1;\n\n      // Actualizar estado para forzar un nuevo renderizado\n      this.setState({\n        header: header,\n        data: this.props.data,\n        attrs: this.props.attrs,\n        suffix: this.props.suffix,\n        cellStyler: this.props.cellStyler,\n        enumRows: this.props.enumRows\n      });\n    }\n  }\n}\n\nexport default DataTable","import React, {Component} from 'react';\nimport Highcharts from 'highcharts';\nimport data from '../data/brewers_friend_recipes.json';\nimport _ from 'lodash';\n\nclass ScatterPlot extends Component {\n    \n    config = {\n        chart: {\n            type: 'scatter',\n            zoomType: 'xy',\n            height: '80%'\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: this.props.dataX+' vs '+this.props.dataY+' para distintos estilos de cerveza'\n        },\n        subtitle: {\n            text: \"Fuente: Brewer's Friend Recipes\"\n        },\n        xAxis: {\n            title: {\n                enabled: true,\n                text: this.props.dataX\n            },\n            startOnTick: true,\n            endOnTick: true,\n            showLastLabel: true\n        },\n        yAxis: {\n            title: {\n                text: this.props.dataY\n            }\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle',        \n            floating: true,\n            backgroundColor: '#ffffff',\n            borderWidth: 1\n        },\n        plotOptions: {\n            scatter: {\n                marker: {\n                    radius: 5,\n                    states: {\n                        hover: {\n                            enabled: true,\n                            lineColor: 'rgb(100,100,100)'\n                        }\n                    }\n                },\n                states: {\n                    hover: {\n                        marker: {\n                            enabled: false\n                        }\n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{series.name}</b><br>',\n                    pointFormat: '{point.x}, {point.y}'\n                }\n            }\n        }\n    }\n\n    render() {        \n        return(\n            <figure className='highcharts-figure'>\n                <div id={this.props.id}></div>                \n            </figure>\n        )\n    }\n    \n    componentDidMount() {\n        \n        // Agrupar estilos\n        let styles = _.groupBy(data, 'Style');\n\n        // Generar series de datos\n        let series = [];\n        for(var s in styles){\n            let serie = {\n                name: s,\n                data: []\n            };\n            for(var d in styles[s])\n                serie.data.push([styles[s][d][this.props.dataX], styles[s][d][this.props.dataY]]);\n            series.push(serie);\n        }\n\n        this.config.series = series;\n\n        Highcharts.chart(this.props.id, this.config);\n    }\n}\n\nexport default ScatterPlot;","let colorMap = [\n    [250, 250, 188],\n    [250, 250, 160],\n    [250, 250, 133],\n    [250, 250, 105],\n    [250, 250, 78],\n    [245, 246, 50],\n    [240, 238, 46],\n    [235, 228, 47],\n    [230, 218, 48],\n    [225, 208, 50],\n    [220, 198, 51],\n    [215, 188, 52],\n    [209, 176, 54],\n    [204, 166, 55],\n    [200, 156, 56],\n    [197, 146, 56],\n    [195, 139, 56],\n    [192, 136, 56],\n    [192, 132, 56],\n    [192, 128, 56],\n    [192, 124, 56],\n    [192, 120, 56],\n    [192, 116, 56],\n    [192, 112, 56],\n    [192, 109, 56],\n    [188, 105, 56],\n    [183, 101, 56],\n    [178, 97, 56],\n    [171, 94, 55],\n    [164, 90, 53],\n    [157, 86, 52],\n    [149, 82, 51],\n    [141, 77, 49],\n    [134, 73, 46],\n    [127, 69, 43],\n    [119, 66, 39],\n    [112, 62, 36],\n    [105, 58, 31],\n    [98, 54, 25],\n    [91, 51, 19],\n    [84, 47, 13],\n    [77, 43, 8],\n    [69, 39, 11],\n    [62, 36, 13],\n    [54, 31, 16],\n    [47, 27, 19],\n    [39, 24, 21],\n    [36, 21, 20],\n    [33, 20, 19],\n    [31, 18, 17],\n    [28, 16, 15],\n    [28, 15, 14],\n    [23, 13, 12],\n    [21, 11, 10],\n    [18, 10, 9],\n    [16, 8, 7],\n    [13, 6, 5],\n    [11, 5, 4],\n    [9, 3, 2],\n    [6, 2, 1]\n];\n\nconst LtoRGB = (L) => { // Mapeo L -> RGB\n    if(L){\n        let EBC = Math.round(2.666*parseFloat(L)-1.49);\n        if(EBC < 0) EBC = 0;\n        if(EBC > 59) EBC = 59;    \n        return colorMap[EBC];\n    }else{\n        return [255,255,255];\n    }\n}\n\nconst LtoTextColor = (L) => {\n    let rgb = LtoRGB(L);    \n    return { // Formato objeto estilo ReactJS\n        backgroundColor: \"rgb(\"+rgb[0]+\",\"+rgb[1]+\",\"+rgb[2]+\")\", \n        color: L>13?\"white\":\"black\"\n    };\n}\n\nexport {LtoRGB, LtoTextColor};","import React, {Component} from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport DataTable from './DataTable.js';\nimport ScatterPlot from '../charts/ScatterPlot.js';\nimport rawData from '../data/brewers_friend_recipes.json';\nimport cleanData from '../data/beer_styles_distribution.json';\nimport {LtoTextColor} from '../utils/LovibondScale.js';\n\nclass DataSection extends Component {\n    render(){\n        return (\n            <Container style={{maxWidth:\"90%\"}}>\n\n                <Row><h3>Datos crudos</h3></Row>\n          \n                <Row>\n                    <p>Fuente: <a href=\"https://www.brewersfriend.com/homebrew-recipes/\">Brewer's Friend Recipes</a></p>\n                </Row>\n\n                <Row>\n                    <DataTable \n                        header={[\"Nombre\", \"Estilo\", \"IBU\", \"ABV\", \"Color\"]}\n                        suffix={{ABV: \" %\", Color: \" °L\"}}\n                        enumRows={true}\n                        data={rawData}\n                        attrs={[\"Name\", \"Style\", \"IBU\", \"ABV\", \"Color\"]}\n                        cellStyler={{method: LtoTextColor, col: \"Color\"}}\n                    />\n                </Row>            \n\n                <Row className=\"mt-4\">\n                    <h3>Gráfico de datos dispersos</h3>\n                </Row>\n                \n                <Row className=\"mt-3\">\n                    <Col md={12} lg={6}>\n                        <ScatterPlot id=\"sp1\" dataX=\"Color\" dataY=\"IBU\" />\n                    </Col>\n                    <Col md={12} lg={6}>\n                        <ScatterPlot id=\"sp2\" dataX=\"ABV\" dataY=\"IBU\" />\n                    </Col>\n                </Row>\n\n                <Row><h3>Datos procesados</h3></Row>\n\n                <Row>\n                    <p>Datos agrupados por estilo, contabilizando frecuencia y centroide</p>\n                </Row>\n\n                <Row>\n                    <DataTable \n                        header={[\"Estilo\", \"Frecuencia\", \"IBU\", \"ABV\", \"Color\", \"S11\", \"S12\", \"S13\", \"S21\", \"S22\", \"S23\", \"S31\", \"S32\", \"S33\"]}\n                        suffix={{u_ABV: \" %\", u_Color: \" °L\"}}\n                        enumRows={true}\n                        data={cleanData}\n                        attrs={[\"Style\", \"Freq\", \"u_IBU\", \"u_ABV\", \"u_Color\", \"s11\", \"s12\", \"s13\", \"s21\", \"s22\", \"s23\", \"s31\", \"s32\", \"s33\"]}\n                        cellStyler={{method: LtoTextColor, col: \"u_Color\"}}\n                    />\n                </Row>\n\n            </Container>\n        );\n    }\n}\n\nexport default DataSection;","export default __webpack_public_path__ + \"static/media/slider_knob.85bae966.png\";","import React, {Component} from 'react';\nimport knob from '../img/slider_knob.png'\nimport './Slider2D.css'\n\nconst knobImg = new Image(50, 50);\nknobImg.src = knob;\n\nclass Slider2D extends Component {\n    // Implementa un slider para desplazarse por un espacio de dos dimensiones\n    \n    // Propiedades del slider\n    width = 800\n    height = 800\n    padding = 20 // Espacio entre el borde y el eje\n    updateFreq = 100 // Velocidad de actualizacion de mouse (ms)\n\n    // Atributos privados\n    ctx = null   \n    lastUpdate = 0\n    dragging = false  \n\n    config = { // Configuracion por defecto\n        xLabel: \"Eje X\",\n        yLabel: \"Eje Y\",\n        xPrefix: \"\",\n        yPrefix: \"\",\n        xMin: 0,\n        yMin: 0,\n        xMax: 100,\n        yMax: 100\n    }\n\n    state = { // Valor del slider\n        xValue: 59,\n        yValue: 60\n    }\n\n    xyToCanvas(x, y) { // Conversion de coordenadas\n        const v = Math.round((x - this.config.xMin) / (this.config.xMax - this.config.xMin) * (this.width - 2*this.padding)) + this.padding;\n        const w = Math.round((this.config.yMax - y) / (this.config.yMax - this.config.yMin) * (this.height - 2*this.padding)) + this.padding;\n        return [v, w];\n    }\n\n    canvasToXY(v, w, canvas) { // Conversion de coordenadas\n        const r = canvas.getBoundingClientRect();\n\n        const x = (v - r.left - this.padding) / (r.right - r.left - 2*this.padding) * (this.config.xMax - this.config.xMin) + this.config.xMin;\n        const y = this.config.yMax - (w - r.top - this.padding) / (r.bottom - r.top - 2*this.padding) * (this.config.yMax - this.config.yMin);\n\n        return [x, y];\n    }\n\n    constructor() {\n        super();\n        this.containerRef = React.createRef();\n        this.canvasRef = React.createRef();        \n\n        window.addEventListener('resize', () => { // Ajustar escalas al cambiar tamanio de ventana\n            try{\n                const canvas = this.canvasRef.current;\n                this.width = this.containerRef.current.clientWidth;\n                this.height = this.containerRef.current.clientHeight;\n                canvas.width = this.width;\n                canvas.height = this.height;\n                //this.ctx.font = \"18px Helvetica\";\n                //this.ctx.lineWidth = 3;\n                this.componentDidUpdate();\n            }catch(e){\n                //console.log(e);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div ref={this.containerRef} className=\"canvas-container\">\n                <canvas ref={this.canvasRef} \n                    onMouseDown={this.mouseDown}\n                    onMouseMove={this.mouseMove}\n                    onMouseUp={this.mouseUp}\n                    onWheel={this.mouseWheel}\n                ></canvas>\n            </div>\n        )\n    }\n\n    componentDidUpdate() { // Redibujado \n\n        // Borrar canvas\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        \n        // Dibujar ejes de coordenadas\n        this.ctx.strokeStyle = \"#000000\";\n        this.ctx.fillStyle = \"#000000\";\n        this.ctx.font = \"18px Helvetica\";\n        this.ctx.lineWidth = 3;\n\n        // Eje Y\n        this.ctx.moveTo(this.padding, this.height - this.padding);\n        this.ctx.lineTo(this.padding, this.padding);\n        // Etiqueta (90° de rotacion)\n        this.ctx.save();\n        this.ctx.rotate(-1.571);\n        this.ctx.fillText(this.config.yLabel, this.padding - 80, this.padding - 5);\n        this.ctx.restore();\n        \n        // Eje X\n        this.ctx.moveTo(this.padding, this.height - this.padding);\n        this.ctx.lineTo(this.width - this.padding, this.height - this.padding);\n        // Etiqueta\n        this.ctx.fillText(this.config.xLabel, this.width - this.padding - 50, this.height - this.padding + 20);\n\n        this.ctx.stroke();        \n\n        // Ejes del deslizador\n        const xy = this.xyToCanvas(this.state.xValue, this.state.yValue);\n        \n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(xy[0], xy[1]);\n        this.ctx.lineTo(xy[0], this.height - this.padding);\n        this.ctx.fillText(this.state.xValue.toFixed(2)+this.config.xPrefix, xy[0] + 30, this.height - this.padding - 5);\n        \n        this.ctx.moveTo(xy[0], xy[1]);\n        this.ctx.lineTo(this.padding, xy[1]);\n        this.ctx.fillText(this.state.yValue.toFixed(2), this.padding + 30, xy[1]);\n        \n        this.ctx.stroke();\n        \n\n        // Dibujar centroides de cada clase\n        // El radio es proporcional al peso de la clase\n        if(this.props.dataBackground){\n            this.ctx.font = \"bold 12px Helvetica\"; // Estilo de las etiquetas de las clases\n            for(let k in this.props.dataBackground.data){\n                let d = this.props.dataBackground.data[k]; // Para simplificar nombre\n                \n                this.ctx.strokeStyle = d.color; // Color solido de borde\n                this.ctx.fillStyle = d.color_t; // Color semitransparente de fondo\n                this.ctx.lineWidth = this.props.dataBackground.names[k] === this.props.selected ? 10 : 2; // Estilo seleccionado\n                \n                let p = this.xyToCanvas(d.u[2], d.u[1]); // Coordenadas para dibujar circulo y texto\n                \n                this.ctx.beginPath();\n                this.ctx.arc(p[0], p[1], d.y*5, 0, 6.3);\n                this.ctx.closePath();\n                this.ctx.fill();\n                this.ctx.stroke();\n\n                if(this.props.showLabels) // Los nombres de los estilos se muestran si estan habilitados\n                    this.ctx.fillText(this.props.dataBackground.names[k], p[0], p[1]);\n            }\n        }\n\n        // Dibujar perilla del deslizador\n        this.ctx.drawImage(knobImg, xy[0] - 20, xy[1] - 20, 40, 40);\n    }\n\n    componentDidMount() { \n\n        const canvas = this.canvasRef.current;\n\n        // Configurar dimensiones del canvas\n        this.width = this.containerRef.current.clientWidth;\n        this.height = this.containerRef.current.clientHeight;\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.ctx = canvas.getContext(\"2d\");\n        this.ctx.textAlign = \"center\";\n        this.ctx.lineWidth = 3;\n\n        // Copiar configuracion\n        if(this.props.config)\n            this.config = Object.assign(this.config, this.props.config);\n\n        // Configurar valor inicial del slider\n        this.setState({\n            xValue: this.props.xValue,\n            yValue: this.props.yValue\n        });\n\n        // Crear eventos de mouse para las interacciones\n        this.mouseDown = e => { // Inicio del arrastre del la perilla\n            this.dragging = true;\n        }\n\n        this.mouseUp = e => { // Fin del arrastre de la perilla\n            if(this.dragging){\n                this.mouseMove(e); // En caso de click sin arrastrar, efectuar actualizacion con este metodo\n                this.dragging = false;                \n            }\n        }\n\n        this.mouseMove = e => {\n            if(this.dragging && Date.now() - this.lastUpdate > this.updateFreq){ // Limitar frecuencia\n\n                this.lastUpdate = Date.now(); // Limitar frecuencia de actualizacion\n\n                const xy = this.canvasToXY(e.clientX, e.clientY, canvas);\n                \n                this.setState({ // Actualizar estado\n                    xValue: xy[0], \n                    yValue: xy[1]\n                }); \n\n                this.props.onChange({ // Emitir evento\n                    xValue: xy[0], \n                    yValue: xy[1]\n                });\n            }\n        }\n\n        this.mouseWheel = e => { \n            if(Date.now() - this.lastUpdate > this.updateFreq){ // Limitar frecuencia\n            \n                this.lastUpdate = Date.now(); // Limitar frecuencia de actualizacion\n\n                const xy = this.canvasToXY(e.clientX, e.clientY, canvas);\n\n                const w = this.config.xMax - this.config.xMin;\n                const h = this.config.yMax - this.config.yMin;\n\n                const r = e.deltaY < 0 ? 0.4 : 0.6; // Zoom in : Zoom out\n                \n                this.config.xMin = xy[0] - w * r;\n                this.config.xMax = xy[0] + w * r;\n\n                this.config.yMin = xy[1] - h * r;\n                this.config.yMax = xy[1] + h * r;\n\n                this.componentDidUpdate();\n            }\n        }\n\n        knobImg.onload = () => { // Luego de cargar imagen de la perilla, redibujar\n            this.componentDidUpdate();\n        }\n    }    \n}\n\nexport default Slider2D;","import React, {Component} from 'react';\nimport Highcharts from 'highcharts';\n\n\nclass BarPlot extends Component {\n    \n    config = {\n        chart: {\n            type: 'bar'\n        },\n        title: {\n            text: 'Estilos de cerveza y puntajes de similitud',\n            style: {\n                fontSize: '2em',\n                fontWeight: 'bold'\n            } \n        },   \n        xAxis: {\n            categories: [], // Lista de estilos                                \n            labels: {\n                style: {\n                    fontSize: '1.6em'\n                }    \n            }\n        },\n        yAxis: {            \n            title: {\n                text: 'Probabilidad [%]',\n                align: 'high'\n            },\n            labels: {\n                overflow: 'justify',\n                style: {\n                    fontSize: '1.6em'\n                }\n            }\n        },\n        tooltip: {\n            valueSuffix: ' %'\n        },\n        plotOptions: {\n            bar: {\n                dataLabels: {\n                    enabled: true\n                }\n            },\n            series: {\n                events: {\n                    click: e => {\n                        this.props.onClassSelected(e.point.category);\n                    }\n                }\n            }\n        },\n        credits: {\n            enabled: false\n        },\n        series: [\n            {\n                name: 'Probabilidad',   \n                showInLegend: false,\n                data: [] // Definir\n            }\n        ]\n    }\n\n    chart = null\n\n    render() {                \n        return(\n            <figure className=\"highcharts-figure\">\n                <div id={this.props.id} style={{height:\"95%\"}}></div>                \n            </figure>\n        )\n    }\n    \n    componentDidMount() {        \n        this.config.xAxis.categories = this.props.data.names;\n        this.config.series[0].data = this.props.data.data;\n        this.config.plotOptions.bar.pointWidth = Math.round(600/this.props.data.names.length);\n        if(this.props.onClassSelected){ // Evento de seleccion de una clase para resaltar\n            this.config.plotOptions.series = {\n                events: {\n                    click: e => {this.props.onClassSelected(e.point.category)}\n                }\n            };\n        }\n        this.chart = Highcharts.chart(this.props.id, this.config);\n    }\n\n    componentDidUpdate() {\n        this.chart.update({\n            xAxis: {\n                categories: this.props.data.names\n            },       \n            plotOptions: {\n                bar: {\n                    pointWidth: Math.round(600/this.props.data.names.length)\n                }\n            },  \n            series:[\n                {\n                    data: this.props.data.data\n                }\n            ]\n        });\n    }\n}\n\nexport default BarPlot;","const hue2rgb = (p, q, t) => {\n    if(t < 0) t += 1;\n    if(t > 1) t -= 1;\n    if(t < 1/6) return p + (q - p) * 6 * t;\n    if(t < 1/2) return q;\n    if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n    return p;\n};\n\nconst hsl2rgb = (h, s, l) => {\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    const r = hue2rgb(p, q, h + 1/3);\n    const g = hue2rgb(p, q, h);\n    const b = hue2rgb(p, q, h - 1/3);\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n};\n\nexport {hue2rgb, hsl2rgb};","import data from '../data/beer_styles_distribution.json';\nimport {multiply, transpose} from 'mathjs';\nimport {hsl2rgb} from './Colors.js'\n\nconst mahalanobis = (x, u, ci) => { \n    // Calcula la distancia de Mahalanobies entre el vector x y el vector u dada\n    // la matriz de covarianza inversa ci.\n\n    let x_mu = [\n        x[0] - u[0],\n        x[1] - u[1],\n        x[2] - u[2]\n    ];\n\n    let m = multiply( multiply(x_mu, ci), transpose(x_mu) );\n    \n    return m;\n};\n\nconst classify = (s, n = 10, uf = false) => {\n    // Dado el estilo de cerveza con atributos \"s = {color, ibu, abv}\" obtiene la distancia\n    // de Mahalanobis a cada estilo de cerveza conocido presente en el dataset \"data\"\n    // \"n\" es la cantidad de resultados a devolver y \"uf\" indica si hay que tener\n    // en cuenta la frecuencia de cada clase o no \n\n    // Devuelve un objeto con el formato necesario para graficar clases con Highcharts\n    \n\n    let x = [s.color, s.ibu, s.abv]; // Vector de la receta a evaluar\n    \n    let styles = []; // Lista de distancias a cada distribucion\n\n    const fSum = uf ? data.reduce((a, b) => {return a + b.Freq}, 0) : 0; // Suma de la frecuencia de cada clase\n\n    for(let k in data){ // Para cada clase o estilo\n\n        let u = [ // Centroide de la clase (promedio)\n            data[k].u_Color,\n            data[k].u_IBU,\n            data[k].u_ABV\n        ];\n\n        let ci = [ // Matriz de covarianza inversa de la distribucion\n            [data[k].s11, data[k].s12, data[k].s13],\n            [data[k].s21, data[k].s22, data[k].s23],\n            [data[k].s31, data[k].s32, data[k].s33]\n        ];\n\n        const m = uf ? mahalanobis(x, u, ci) * data[k].Freq / fSum : mahalanobis(x, u, ci);\n\n        styles.push({ // Agregar nuevo resultado de distancia de Mahalanobis\n            name: data[k].Style,\n            dist: m,\n            u: [data[k].u_Color, data[k].u_IBU, data[k].u_ABV]\n        });\n    }\n\n    \n    styles.sort(( a,b ) => { // Ordenar resultados por distancia\n        return  a.dist > b.dist ? 1 : -1;\n    });\n\n\n    // Convertir a una escala legible similar a porcentaje de probabilidad\n    // La condicion es que la suma de las escalas invertidas, de P = 100%\n\n    let subStyles = styles.slice(0, n+1); // Tomar un elemento mas de los que se van a mostrar para que el ultimo no quede en 0\n    const maxDist = Math.max.apply(Math, subStyles.map(v => { return v.dist; })); // Maxima distancia dentro de las n primeras clases\n    const cSum = subStyles.reduce((a, b) => {return a + b.dist}, 0); // Suma de todos los elementos del subconjunto\n    subStyles = subStyles.map( v => {return { // Aplicar formula a cada elemento\n        name: v.name, \n        dist: (maxDist - v.dist)/(maxDist*n - cSum + maxDist)*100,\n        u: v.u\n    }} ); \n\n    // Adaptar los resultados al formato de salida\n    let result = {\n        names: [],\n        data: [],\n        u: []\n    };\n\n    for(let k in subStyles.slice(0,n)){ // Volver a recortar para quitar el ultimo elemento (n+1) que no debe graficarse\n        result.names[k] = subStyles[k].name;\n        result.data[k] = {\n            // Datos para grafico highchart\n            y: Math.round(subStyles[k].dist*100)/100, // Reducir a dos cifras\n            color: colors[subStyles[k].name], // Asignar color solido\n            // Datos para scatterplot en canvas\n            color_t: colors[subStyles[k].name+\"_t\"], // Asignar color semitransparente\n            u: subStyles[k].u // Pasar centroide\n        }\n    }\n\n    return result;\n};\n\n// Generar colores para las clases o estilos\n// Cada clase tiene asignado un valor de matiz distinto y los valores de saturacion\n// y luminosidad son aleatorios\nvar colors = {};\nlet N = data.length; \nfor(let k in data){    \n    let rgb = hsl2rgb(k/N, 0.6 + Math.random()*0.4, 0.2 + Math.random()*0.4);    \n    colors[data[k].Style] = \"rgb(\"+rgb[0]+\",\"+rgb[1]+\",\"+rgb[2]+\")\"; // Color solido\n    colors[data[k].Style+\"_t\"] = \"rgba(\"+rgb[0]+\",\"+rgb[1]+\",\"+rgb[2]+\", 0.5)\"; // Color semitransparente\n};\n\nexport default classify;","import React, {Component} from 'react';\nimport {Container, Row, Col, Form} from 'react-bootstrap';\nimport Slider2D from './Slider2D.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BarPlot from '../charts/BarPlot.js';\nimport classify from '../utils/Classifier.js';\nimport './Dashboard.css';\n\n// Valores de configuracion por defecto\nconst defaultTarget = {\n  color: 10.6,\n  ibu: 75.2,\n  abv: 5.7\n};\nconst numStyles = 15; // Cantidad de estilos a listar\nconst useFreq = false; // Ponderar estilos por popularidad\nconst selectedStyle = null; // Seleccionar algun estilo\n\nclass Dashboard extends Component {\n \n  state = {\n    target: defaultTarget,\n    styles: classify(defaultTarget, numStyles, useFreq),\n    numStyles: numStyles, // Cantidad de estilos a incluir\n    showLabels: true, // Mostrar etiquetas de estilos en el slider\n    useFreq: useFreq, // Usar popularidad para ponderar estilos\n    selectedStyle: selectedStyle // Valor del estilo seleccionado del barplot\n  }\n\n  sliderConfig = { // Slider bidimensional\n    xLabel: \"ABV [%]\",\n    xPrefix: \"%\",\n    xMin: 0,\n    xMax: 12,\n    yLabel: \"IBU\",\n    yPrefix: \"\",\n    yMin: 0,\n    yMax: 150\n  }\n\n  targetChange(newTarget) { // Evento de cambio de receta a evaluar\n    let newState = {\n      target: newTarget, \n      styles: classify(newTarget, this.state.numStyles, this.state.useFreq),\n      selectedStyle: null // Al cambiar la posicion del slider, deseleccionar todas\n    };    \n    this.setState(newState);\n  }\n\n  numStylesChange(newValue) { // Evento de cambio de cantidad de estilos a mostrar\n    this.setState((p, c) => {                          \n      return {\n        target: p.target,\n        styles: classify(p.target, newValue, p.useFreq),\n        numStyles: newValue\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container style={{maxWidth:\"90%\"}}>\n        <Row>\n          <Col sm={12} lg={6}>                        \n            <Row>              \n              <span className=\"color-value\" style={{marginLeft:this.state.target.color*2.3+\"%\"}}>{this.state.target.color}°L</span>\n              <Form.Control className=\"color-slider\"\n                onChange={e => { this.targetChange({color: parseFloat(e.target.value), ibu: this.state.target.ibu, abv: this.state.target.abv})} }\n                id=\"color-slider\" type=\"range\" min={0} max={40} step={0.1}\n                value={this.state.target.color}/>\n            </Row>\n\n            <Row style={{marginTop:'20px', padding:'0', width:'100%'}}>\n              <Slider2D id=\"slider2d\" \n                config={this.sliderConfig}\n                dataBackground={this.state.styles}\n                showLabels={this.state.showLabels}\n                xValue={this.state.target.abv} \n                yValue={this.state.target.ibu} \n                selected={this.state.selectedStyle}\n                onChange={e => {this.targetChange({color: this.state.target.color, abv: parseFloat(e.xValue), ibu: parseFloat(e.yValue)})} }/>\n            </Row>\n\n            <Row className=\"mt-4\">\n              <Col>\n                <div>\n                  <h5>Propiedades a evaluar: </h5>\n                  <ul>\n                    <li><b>Color: </b>{this.state.target.color}°L</li> \n                    <li><b>IBU: </b>{this.state.target.ibu.toFixed(2)} </li> \n                    <li><b>ABV: </b>{this.state.target.abv.toFixed(2)} %</li>\n                  </ul>\n                </div>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Cantidad de clases: {this.state.numStyles}</Form.Label>\n                  <Form.Control className=\"num-style-slider\"\n                    onChange={e => {this.numStylesChange(parseInt(e.target.value));} }\n                    id=\"num-styles-slider\" type=\"range\" min={10} max={60} step={1}\n                    value={this.state.numStyles}\n                  />\n                </Form.Group>\n                <Form.Group>  \n                  <Form.Check type=\"switch\" id=\"freq-switch\" label=\"Ponderar por popularidad\" checked={this.state.useFreq}\n                    onChange={e => {\n                      this.setState({\n                        useFreq: e.target.checked, \n                        styles: classify(this.state.target, this.state.numStyles, e.target.checked)});\n                      }}/>\n                  <Form.Check type=\"switch\" id=\"labls-switch\" label=\"Mostrar etiquetas\" checked={this.state.showLabels}\n                    onChange={e => {this.setState({showLabels: e.target.checked});}}/>\n                </Form.Group>\n              </Col>\n            </Row>\n\n          </Col>\n\n          <Col sm={12} lg={6}>\n            <BarPlot id='prob-chart' data={this.state.styles} \n              onClassSelected={style => {this.setState({selectedStyle: style});}}/>\n          </Col>\n\n        </Row>\n        \n      </Container>\n    );\n  }\n}\n\nexport default Dashboard","import React, {Component} from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass About extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h3>Acerca de esta aplicación</h3>\n            <p>Esta es una aplicación web ReactJS que asiste en la determinación del estilo de una cerveza según su color, sabor y graduación alcohólica a partir de los datos de más de 70.000 recetas del sitio <a href=\"https://www.brewersfriend.com/\">Brewer's Friend</a>.</p>\n            <p>Este desarrollo fue realizado en el marco del curso de posgrado <a href=\"https://cs.uns.edu.ar/~mlg/vis/\">Análisis Visual de Grandes Conjuntos de Datos</a> dictado por Dra. Silvia M. Castro y Dra. M. Luján Ganuza.</p>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col style={{lineHeight:\"10px\"}}>\n            <h5>Diseño e implementación</h5>            \n            <p><a href=\"https://matiasmicheletto.github.io/\">Matías J. Micheletto</a></p>\n            <p>Email: <a href=\"mailto:matias.micheletto@uns.edu.ar?Subject=Ref.%20Cipressus\">matias.micheletto@uns.edu.ar</a></p>\n            <p>Documentación: <a href=\"https://github.com/matiasmicheletto/visualizacion-uns\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/matiasmicheletto/visualizacion-uns</a></p>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\" style={{fontSize:\"75%\"}}>\n          <Col>\n            <h5>Términos y condiciones</h5>\n            <p>Este programa es software libre: puede redistribuirlo y/o modificarlo bajo los términos de la Licencia General Pública de GNU publicada por la Free Software Foundation, ya sea la versión 3 de la Licencia, o a su elección cualquier versión posterior.</p>\n            <p>Este programa se distribuye con la esperanza de que sea útil pero SIN NINGUNA GARANTÍA; incluso sin la garantía implícita de MERCANTIBILIDAD o CALIFICADA PARA UN PROPÓSITO EN PARTICULAR. Vea la Licencia General Pública de GNU para más detalles.</p>\n            <p>Usted ha debido de recibir una copia de la Licencia General Pública de GNU junto con este programa. Si no, vea http://www.gnu.org/licenses.</p>\n          </Col>\n        </Row>          \n      </Container>\n    );\n  }\n}\n\nexport default About;","import React, {Component} from 'react';\nimport Menu from './components/Menu.js';\nimport Home from './components/Home.js';\nimport DataSection from './components/DataSection.js';\nimport Dashboard from './components/Dashboard.js';\nimport About from './components/About.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect  \n} from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return ( \n      <Router>\n        <Menu />\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/data\">\n              <DataSection />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n        </Switch>  \n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}